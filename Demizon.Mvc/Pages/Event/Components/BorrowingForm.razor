@using AutoMapper
@using DomProject.Core.Services.Event
@using DomProject.Core.Services.File
@using DomProject.Core.Services.User
@using DomProject.Dal.Entities
@using DomProject.Mvc.ViewModels

@inject IFileService FileService;
@inject IMapper Mapper;
@inject IEventService EventService;
@inject IUserService UserService;

<MudForm Model="EventModel" Class="Class">
    @*<MudSelect Label="Device" @bind-Value="EventModel.DeviceId" Placeholder="Pick Device" Required="true" RequiredError="Device is required!">
        @foreach (var device in AllDevices)
        {
            <MudSelectItem Value="device.Id">@device.Name</MudSelectItem>
        }
    </MudSelect>*@
    @*<MudSelect Label="User" @bind-Value="Borrowing.UserId" Placeholder="Pick User" Required="true" RequiredError="User is required!">
            @foreach (var user in AllUsers)
            {
                <MudSelectItem Value="user.Id">@user.Login</MudSelectItem>
            }
    </MudSelect>*@
</MudForm>
<MudPaper Class="pa-4 justify-center my-4 mud-text-align-center">
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => PassEvent.InvokeAsync(EventModel))">Submit</MudButton>
</MudPaper>

@code {

    [Parameter]
    public EventViewModel.Create EventModel { get; set; } = new();

    [Parameter]
    public EventCallback<EventViewModel.Create> PassEvent { get; set; }

    [Parameter]
    public string Class { get; set; } = "";
}
